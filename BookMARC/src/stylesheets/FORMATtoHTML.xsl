<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  <xsl:output method="html"/>  <xsl:preserve-space elements="DESCRIPTION" />  <xsl:template match="/">    <html>      <head>        <title>          <xsl:text>FORMAT: </xsl:text>          <xsl:value-of select="FORMAT/@name"/>        </title>      </head>            <body style="font-family: Verdana, Helvetica, Arial, Sans-Serif">        <table align="center" border="0" cellpadding="4" cellspacing="2">          <tr>            <th colspan="2" bgcolor="#5A738C">              <font color="white" size="+1">FORMAT: <xsl:value-of select="FORMAT/@name"/></font>              <br />              <font color="white" size="-2">                <xsl:text>This is a rendering of an XML version of the Unimarc Manual produced by BookMARC for working objectives only. The  XML version is strictly for internal development and documentation purposes of BookMARC, LDA (http://www.bookmarc.pt).</xsl:text>                <br />                <xsl:text>The official HTML version of the Unimarc Manual is available from IFLA (International Federation of Library Associations and Institutions) at http://www.ifla.org/VI/3/p1996-1/sec-uni.htm.</xsl:text>                <br />                <xsl:text>The Unimarc Manual is copyrighted by IFLA.</xsl:text>              </font>            </th>          </tr>                    <xsl:if test="count(FORMAT/FIELD) &gt; 0">            <tr bgcolor="#5A738C">              <th colspan="2">                <font color="white"><xsl:text>Note: due to the size of the UnimarcDoc XML document, it is broken in separate files. This file only contains the fields in the table bellow.</xsl:text></font>              </th>            </tr>            <tr bgcolor="#5A738C">              <td>                <font color="white">TAG</font>              </td>              <td>                <font color="white">NAME</font>              </td>            </tr>                        <xsl:for-each select="FORMAT/FIELD">              <tr bgcolor="#D9E2EA">                <td width="5%">                  <a>                    <xsl:attribute name="href">#<xsl:value-of select="@tag"/></xsl:attribute>                    <xsl:value-of select="@tag"/>                  </a>                </td>                <td>                  <xsl:value-of select="@name"/>                </td>              </tr>            </xsl:for-each>          </xsl:if>        </table>                <hr size="1" />                <xsl:apply-templates select="FORMAT"/>      </body>    </html>  </xsl:template>    <!--  Match LEADER Template  -->  <!-- Match LEADER Template -->  <xsl:template match="LEADER">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th colspan="2">          <font color="white"><xsl:text>RECORD LABEL</xsl:text></font>        </th>      </tr>      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Mandatory</td>        <td>          <xsl:call-template name="expandBoolean">            <xsl:with-param name="value" select="@mandatory"/>          </xsl:call-template>        </td>      </tr>      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Repeatable</td>        <td>          <xsl:call-template name="expandBoolean">            <xsl:with-param name="value" select="@repeatable"/>          </xsl:call-template>        </td>      </tr>      <tr>        <td colspan="2">          <xsl:for-each select="child::node()">            <xsl:if test="@name">              <table border="1" cellpadding="2" cellspacing="0" width="100%">                <tr bgcolor="#5A738C">                  <th colspan="2">                    <font color="white">                        <xsl:value-of select="@name"/>: From <xsl:value-of select="@start"/> Length <xsl:value-of select="@length"/>                    </font>                  </th>                </tr>                <tr>                  <td colspan="2">                    <xsl:if test="count(OPTION) > 0">                      <table border="1" cellpadding="2" cellspacing="0" width="100%">                        <tr bgcolor="#5A738C">                          <th colspan="2">                            <font color="white">Vocabulary</font>                          </th>                        </tr>                        <xsl:for-each select="OPTION">                          <tr>                            <td bgcolor="#D9E2EA" valign="top" width="15%">                              <xsl:if test="@value = ' '">#</xsl:if>                              <xsl:value-of select="@value"/>                            </td>                            <td>                              <xsl:value-of select="@name"/>                              <br />                              <xsl:if test="string-length(DESCRIPTION) > 0">                                <em>                                  <xsl:call-template name="replaceLineFeeds">                                    <xsl:with-param name="string" select="DESCRIPTION"/>                                  </xsl:call-template>                                </em>                              </xsl:if>                            </td>                          </tr>                        </xsl:for-each>                      </table>                    </xsl:if>                  </td>                  </tr>                </table>              </xsl:if>            </xsl:for-each>          </td>        </tr>      </table>  </xsl:template>    <!--   Match FIELD Template   -->  <xsl:template match="FIELD">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th colspan="2">          <font color="white">            <a>              <xsl:attribute name="name"><xsl:value-of select="@tag"/></xsl:attribute>              <xsl:value-of select="@tag"/>: <xsl:value-of select="@name"/>            </a>          </font>        </th>      </tr>            <!--      Mandatory      -->      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Mandatory</td>        <td>          <xsl:call-template name="expandBoolean">            <xsl:with-param name="value" select="@mandatory"/>          </xsl:call-template>                    <xsl:if test="count(MANDATORY-CONDITION) &gt; 0">            <table border="1" cellpadding="2" cellspacing="0" width="100%">              <tr bgcolor="#5A738C">                <th colspan="2">                  <font color="white">Mandatory Condition</font>                </th>              </tr>              <tr>                <td bgcolor="#D9E2EA" valign="top" width="15%">                  <xsl:text>Rule</xsl:text>                </td>                <td>                  <xsl:value-of select="MANDATORY-CONDITION/RULE"/>                </td>              </tr>              <tr>                <td bgcolor="#D9E2EA" valign="top" width="15%">                  <xsl:text>Notes</xsl:text>                </td>                <td>                  <xsl:call-template name="replaceLineFeeds">                    <xsl:with-param name="string" select="MANDATORY-CONDITION/NOTES"/>                  </xsl:call-template>                </td>              </tr>            </table>          </xsl:if>        </td>      </tr>            <!--       Repeatable      -->      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Repeatable</td>        <td>          <xsl:call-template name="expandBoolean">            <xsl:with-param name="value" select="@repeatable"/>          </xsl:call-template>                              <xsl:if test="count(REPEATABLE-CONDITION) &gt; 0">            <table border="1" cellpadding="2" cellspacing="0" width="100%">              <tr bgcolor="#5A738C">                <th colspan="2">                  <font color="white">Mandatory Condition</font>                </th>              </tr>              <tr>                <td bgcolor="#D9E2EA" valign="top" width="15%">                  <xsl:text>Rule</xsl:text>                </td>                <td>                  <xsl:value-of select="REPEATABLE-CONDITION/RULE"/>                </td>              </tr>              <tr>                <td bgcolor="#D9E2EA" valign="top" width="15%">                  <xsl:text>Notes</xsl:text>                </td>                <td>                  <xsl:call-template name="replaceLineFeeds">                    <xsl:with-param name="string" select="REPEATABLE-CONDITION/NOTES"/>                  </xsl:call-template>                </td>              </tr>            </table>          </xsl:if>        </td>      </tr>            <!--      First Indicator      -->      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">First Indicator</td>        <td>          <xsl:value-of select="IND1/@name"/>          <br />          <xsl:call-template name="expandIndicator">            <xsl:with-param name="indicator" select="IND1"/>          </xsl:call-template>        </td>      </tr>            <!--      Second Indicator      -->      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Second Indicator</td>        <td>          <xsl:value-of select="IND2/@name"/>          <br />          <xsl:call-template name="expandIndicator">            <xsl:with-param name="indicator" select="IND2"/>          </xsl:call-template>        </td>      </tr>            <!--      Field Description      -->      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Description</td>        <td>          <xsl:call-template name="replaceLineFeeds">            <xsl:with-param name="string" select="DESCRIPTION"/>          </xsl:call-template>        </td>      </tr>            <xsl:if test="count(NOTES) > 0">        <tr>          <td bgcolor="#D9E2EA" valign="top" width="15%">Notes</td>          <td>            <xsl:choose>              <xsl:when test="count(NOTES/TABLE) > 0">                <xsl:copy-of select="NOTES"/>              </xsl:when>              <xsl:otherwise>                <xsl:call-template name="replaceLineFeeds">                  <xsl:with-param name="string" select="NOTES"/>                </xsl:call-template>              </xsl:otherwise>            </xsl:choose>          </td>        </tr>      </xsl:if>            <xsl:if test="count(APPLYIF) > 0">        <tr>          <td colspan="2">            <xsl:apply-templates select="APPLYIF"/>          </td>        </tr>      </xsl:if>      <xsl:if test="count(PSUBFIELD) > 0">        <tr>          <td colspan="2">            <xsl:apply-templates select="PSUBFIELD"/>          </td>        </tr>      </xsl:if>      <xsl:if test="count(SUBFIELD) > 0">        <tr>          <td colspan="2">            <xsl:apply-templates select="SUBFIELD"/>          </td>        </tr>      </xsl:if>      <xsl:if test="count(EXAMPLES) > 0">        <tr>          <td colspan="2">            <xsl:apply-templates select="EXAMPLES"/>          </td>        </tr>      </xsl:if>      <xsl:if test="count(RELATED) > 0">        <tr>          <td colspan="2">            <table border="1" cellpadding="2" cellspacing="0" width="100%">              <tr bgcolor="#5A738C">                <th colspan="2">                  <font color="white">Related Fields</font>                </th>              </tr>              <xsl:for-each select="RELATED">                <tr>                  <td bgcolor="#D9E2EA" valign="top" width="15%">                    <xsl:value-of select="@tag"/>                  </td>                  <td>                    <xsl:value-of select="@name"/>                    <br />                    <xsl:call-template name="replaceLineFeeds">                      <xsl:with-param name="string" select="DESCRIPTION"/>                    </xsl:call-template>                  </td>                </tr>              </xsl:for-each>            </table>          </td>        </tr>      </xsl:if>    </table>    <hr size="1"/>  </xsl:template>  <!-- Match FIELD Template End -->    <!--   Match APPLYIF Template   -->  <xsl:template match="APPLYIF">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th>          <font color="white">When <em><xsl:value-of select="@name"/></em></font>        </th>      </tr>      <tr>        <td>          <xsl:apply-templates/>        </td>      </tr>    </table>  </xsl:template>  <!-- Match APPLYIF Template End -->    <!--   Match PSUBFIELD Template   -->  <xsl:template match="PSUBFIELD">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th>          <font color="white">From <em><xsl:value-of select="@start"/></em> to <em><xsl:value-of select="@end"/></em> : <xsl:value-of select="@name"/></font>        </th>      </tr>      <tr>        <td>          <xsl:if test="string-length(DESCRIPTION) > 0">            <xsl:call-template name="replaceLineFeeds">              <xsl:with-param name="string" select="DESCRIPTION"/>            </xsl:call-template>          </xsl:if>                    <xsl:call-template name="expandSeeExample">            <xsl:with-param name="pNode" select="."/>          </xsl:call-template>                    <xsl:if test="VOCABULARY">            <hr size="1"/>            <xsl:call-template name="expandVocabulary"/>          </xsl:if>        </td>      </tr>    </table>  </xsl:template>  <!-- Match PSUBFIELD Template End -->    <!--   Match SUBFIELD Template   -->  <xsl:template match="SUBFIELD">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th colspan="2">          <font color="white">            <xsl:value-of select="@tag"/>: <xsl:value-of select="@name"/>          </font>        </th>      </tr>      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Mandatory</td>        <td>          <xsl:call-template name="expandBoolean">            <xsl:with-param name="value" select="@mandatory"/>          </xsl:call-template>        </td>      </tr>      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Repeatable</td>        <td>          <xsl:call-template name="expandBoolean">            <xsl:with-param name="value" select="@repeatable"/>          </xsl:call-template>        </td>      </tr>      <tr>        <td bgcolor="#D9E2EA" valign="top" width="15%">Description</td>        <td>          <xsl:if test="string-length(DESCRIPTION) > 0">            <xsl:call-template name="replaceLineFeeds">              <xsl:with-param name="string" select="DESCRIPTION"/>            </xsl:call-template>          </xsl:if>          <br />          <xsl:call-template name="expandSeeExample">            <xsl:with-param name="pNode" select="."/>          </xsl:call-template>          <xsl:if test="VOCABULARY">            <hr size="1" />            <xsl:call-template name="expandVocabulary"/>          </xsl:if>        </td>      </tr>      <xsl:if test="count(APPLYIF) > 0">        <tr>          <td colspan="2">            <xsl:apply-templates select="APPLYIF"/>          </td>        </tr>      </xsl:if>      <xsl:if test="count(PSUBFIELD) > 0">        <tr>          <td colspan="2">            <xsl:apply-templates select="PSUBFIELD"/>          </td>        </tr>      </xsl:if>    </table>  </xsl:template>  <!-- Match SUBFIELD Template End -->    <!--   Match EXAMPLES Template   -->  <xsl:template match="EXAMPLES">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th colspan="2">          <font color="white">Examples</font>        </th>      </tr>      <xsl:for-each select="EX">        <tr>          <td bgcolor="#D9E2EA" valign="top" width="15%">            <a>              <xsl:attribute name="name"><xsl:value-of select="ancestor-or-self::FIELD/@tag"/>_ex_<xsl:value-of select="@n"/></xsl:attribute>              <xsl:value-of select="@n"/>            </a>          </td>          <td>            <xsl:call-template name="replaceLineFeeds">              <xsl:with-param name="string" select="text()"/>            </xsl:call-template>          </td>        </tr>      </xsl:for-each>    </table>  </xsl:template>  <!-- Match EXAMPLES Template End -->      <!--   expandVocabulary Template   -->  <xsl:template name="expandVocabulary">    <table border="1" cellpadding="2" cellspacing="0" width="100%">      <tr bgcolor="#5A738C">        <th colspan="2">          <font color="white">Vocabulary</font>        </th>      </tr>      <xsl:for-each select="VOCABULARY/ITEM">        <tr>          <td bgcolor="#D9E2EA" valign="top" width="15%">            <xsl:if test="@code = ' '">#</xsl:if>            <xsl:if test="@code = '  '">##</xsl:if>            <xsl:if test="@code = '   '">###</xsl:if>            <xsl:if test="@code = '    '">####</xsl:if>            <xsl:value-of select="@code"/>          </td>          <td>            <xsl:value-of select="@name"/>            <br  />            <xsl:if test="string-length(DESCRIPTION) > 0">              <em>                <xsl:call-template name="replaceLineFeeds">                  <xsl:with-param name="string" select="DESCRIPTION"/>                </xsl:call-template>              </em>              <br />            </xsl:if>            <xsl:call-template name="expandSeeExample">              <xsl:with-param name="pNode" select="."/>            </xsl:call-template>          </td>        </tr>      </xsl:for-each>    </table>  </xsl:template>  <!-- expandVocabulary Template End -->    <!--   expandIndicator Template   -->  <xsl:template name="expandIndicator">    <xsl:param name="indicator"/>    <xsl:if test="string-length($indicator/DESCRIPTION) > 0">      <em>        <xsl:call-template name="replaceLineFeeds">          <xsl:with-param name="string" select="$indicator/DESCRIPTION"/>        </xsl:call-template>      </em>      <br />    </xsl:if>        <xsl:call-template name="expandSeeExample">      <xsl:with-param name="pNode" select="$indicator"/>    </xsl:call-template>        <xsl:if test="count($indicator/OPTION) > 0">      <hr size="1" />      <table border="1" cellpadding="2" cellspacing="0" width="100%">        <tr bgcolor="#5A738C">          <th colspan="2">            <font color="white">Vocabulary</font>          </th>        </tr>        <xsl:for-each select="$indicator/OPTION">          <tr>            <td bgcolor="#D9E2EA" valign="top" width="15%">              <xsl:if test="@value = ' '">#</xsl:if>              <xsl:value-of select="@value"/>            </td>            <td>              <xsl:value-of select="@name"/>              <br />              <xsl:if test="string-length(DESCRIPTION) > 0">                <em>                  <xsl:call-template name="replaceLineFeeds">                    <xsl:with-param name="string" select="DESCRIPTION"/>                  </xsl:call-template>                </em>                <br />              </xsl:if>                            <xsl:call-template name="expandSeeExample">                <xsl:with-param name="pNode" select="."/>              </xsl:call-template>            </td>          </tr>        </xsl:for-each>      </table>    </xsl:if>  </xsl:template>  <!-- expandIndicator Template End -->    <!--   expandSeeExample Template   -->  <xsl:template name="expandSeeExample">    <xsl:param name="pNode"/>    <xsl:if test="count($pNode/SEEEX) > 0">      <b>See examples: </b>      <em>        <xsl:for-each select="$pNode/SEEEX">          <a>            <xsl:attribute name="href"> #<xsl:value-of select="ancestor-or-self::FIELD/@tag"/>_ex_<xsl:value-of select="@N"/></xsl:attribute>            <xsl:value-of select="@N"/>          </a>          <xsl:text> </xsl:text>        </xsl:for-each>      </em>    </xsl:if>  </xsl:template>  <!-- expandSeeExample Template End -->    <!--   expandBoolean Template  -->  <xsl:template name="expandBoolean">    <xsl:param name="value" select="n"/>    <xsl:choose>      <xsl:when test="$value = 'y' or $value = 'Y'">Yes</xsl:when>      <xsl:when test="$value = 'n' or $value = 'N'">No</xsl:when>      <xsl:otherwise>Conditional</xsl:otherwise>    </xsl:choose>  </xsl:template>  <!-- expandBoolean Template End-->    <!--  replaceLineFeeds  -->  <xsl:template name="replaceLineFeeds">    <xsl:param name="string"/>    <xsl:variable name="lineFeed" select="'&#xA;'"/>        <xsl:choose>      <xsl:when test="contains($string, $lineFeed)">        <xsl:copy-of select="substring-before($string, $lineFeed)"/>        <br />        <xsl:variable name="substring" select="substring-after($string, $lineFeed)"/>                <xsl:choose>          <xsl:when test="contains($substring, $lineFeed)">            <xsl:call-template name="replaceLineFeeds">              <xsl:with-param name="string" select="$substring"/>            </xsl:call-template>          </xsl:when>          <xsl:otherwise>            <xsl:copy-of select="$substring"/>          </xsl:otherwise>        </xsl:choose>      </xsl:when>            <xsl:otherwise>        <xsl:copy-of select="$string"/>      </xsl:otherwise>    </xsl:choose>  </xsl:template></xsl:stylesheet>